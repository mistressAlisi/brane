"""
Django settings for brane project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from decouple import config, Csv
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Don't run with Debug in prod, etc.
SECRET_KEY = config("SECRET_KEY",'django-insecure-ix(#wz*tc%p%bo$+=#+h%h2fa$dfc8xy!rw1!@0)r@6_53x_y!')
DEBUG = config("ENABLE_DEBUG",False,cast=bool)
ALLOWED_HOSTS = config("ALLOWED_HOSTS","*",cast=Csv())


# Application definition
INSTALLED_APPS = [
    'daphne',
    'grappelli',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_bootstrap5',
    "crispy_forms",
    "crispy_bootstrap5",
    'minerve',
    'brane.resources',
    'setup'


]
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


BRANE_SETUP = config("BRANE_SETUP", False, cast=bool)
if BRANE_SETUP:
    # Brane is installed and configured; load production database:
    DATABASES = {
        'default': {
            'ENGINE': config('DB_ENGINE', 'django.db.backends.postgresql'),
            'NAME': config('DB_NAME', 'brane'),
            'USER': config('DB_USER', 'brane'),
            'PASSWORD': config('DB_PW', 'Ug4Dcc*WzJ'),
            'HOST': config('DB_HOST', 'localhost'),
            'PORT': config('DB_PORT', 5432),
        }
    }
else:
    # Brane is NOT installed and configured normally - load dummy database
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': '/tmp/brane_setup.sqlite3',
        }
    }

ROOT_URLCONF = 'brane.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'brane.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases




# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = config("LANGUAGE_CODE",'en-CA')
TIME_ZONE = config("TIME_ZONE",'UTC')
USE_I18N = config("USE_I18N",True,cast=bool)
USE_TZ = config("USE_TZ",True,cast=bool)


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = config("STATIC_URL","static/")
STATIC_ROOT = config("STATIC_ROOT","/var/www/html/brane/static/")

MEDIA_URL = config("MEDIA_URL","media/")
MEDIA_ROOT = config("MEDIA_ROOT","/var/www/html/brane/media/")

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# PODMAN SETTINGS:
PODMAN_API_URL=config("PODMAN_API_URL","unix:///run/podman/podman.sock")
PODMAN_TRAEFIK_ACME_FILE=config("PODMAN_TRAEFIK_ACME_FILE","/opt/brane/acme.json")
PODMAN_DOCKER_SOCKET_FILE=config("PODMAN_DOCKER_SOCKET_FILE","/var/run/docker.sock")

ASGI_APPLICATION = "brane.asgi.application"